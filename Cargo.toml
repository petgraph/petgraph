[package]
name = "petgraph"
version = "0.6.3"
authors = [
    "bluss",
    "Agust√≠n Borgna <agustinborgna@gmail.com>",
    "Anton Kochkov <xvilka@gmail.com>",
    "Bilal Mahmoud <mahmoud@fastmail.com>"
]
categories = ["data-structures"]
documentation = "https://docs.rs/petgraph/"
edition = "2021"
keywords = ["data-structure", "graph", "unionfind", "graph-algorithms"]
license = "MIT OR Apache-2.0"
repository = "https://github.com/petgraph/petgraph"
rust-version = "1.65.0"
description = "Graph data structure library. Provides graph types and graph algorithms."


[package.metadata.release]
no-dev-version = true

[workspace]
resolver = "2"
members = [
    ".",
    "crates/*",
]

[workspace.dependencies]
fixedbitset = { version = "0.4", default-features = false }
serde = { version = "1.0", default-features = false }
funty = { version = "2.0", default-features = false }
indexmap = { version = "2.0.0", default-features = false }
hashbrown = { version = "0.14.0", default-features = false }
proptest = { version = "1.1.0", default-features = false }
error-stack = { version = "0.4.0", default-features = false }
petgraph = { path = "." }
petgraph-core = { path = "crates/core", default-features = false }
petgraph-graph = { path = "crates/graph", default-features = false }
petgraph-adjacency-matrix = { path = "crates/adjacency-matrix", default-features = false }
petgraph-entry = { path = "crates/entry", default-features = false }
petgraph-csr = { path = "crates/csr", default-features = false }
petgraph-matrix-graph = { path = "crates/matrix-graph", default-features = false }
petgraph-algorithms = { path = "crates/algorithms", default-features = false }
petgraph-generators = { path = "crates/generators", default-features = false }
petgraph-proptest = { path = "crates/proptest", default-features = false }
petgraph-io = { path = "crates/io", default-features = false }
petgraph-test-utils = { path = "crates/test-utils", default-features = false }
petgraph-dino = { path = "crates/dino", default-features = false }
petgraph-utils = { path = "crates/utils", default-features = false }
numi = { path = "crates/numi", default-features = false }

[dependencies]
petgraph-adjacency-matrix = { workspace = true, optional = true, default-features = false }
petgraph-core = { workspace = true, default-features = false }
petgraph-csr = { workspace = true, optional = true, default-features = false }
petgraph-graph = { workspace = true, default-features = false }
petgraph-matrix-graph = { workspace = true, optional = true, default-features = false }
petgraph-algorithms = { workspace = true, default-features = false, features = ["remove-me-only-intended-for-move-graph"] }
petgraph-generators = { workspace = true, default-features = false, optional = true }
petgraph-io = { workspace = true, default-features = false, optional = true }

[dependencies.petgraph-entry]
workspace = true
optional = true
default-features = false

[features]
adjacency-matrix = ["dep:petgraph-adjacency-matrix", "petgraph-algorithms/remove-me-only-intended-for-move-adjacency-matrix"]
csr = ["dep:petgraph-csr"]
default = ["std", "entry", "stable-graph", "matrix-graph", "csr", "adjacency-matrix"]
entry = ["dep:petgraph-entry"]
matrix-graph = ["dep:petgraph-matrix-graph"]
serde = ["petgraph-graph/serde"]
stable-graph = ["petgraph-graph/stable"]
io = ["petgraph-io"]
unstable-generators = ["petgraph-generators"]
std = [
    "petgraph-core/std",
    "petgraph-graph/std",
    "petgraph-adjacency-matrix?/std",
    "petgraph-csr?/std",
    "petgraph-io?/std"
]
proptest = ["petgraph-graph/proptest"]

[lib]
bench = false
name = "petgraph"

[profile.bench]
debug = true

[profile.release]
