[package]
name = "petgraph-algorithms"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
petgraph-core = { workspace = true, features = ["alloc"] }
petgraph-graph = { workspace = true, optional = true }
petgraph-adjacency-matrix = { workspace = true, optional = true }
funty.workspace = true
# Like `std::collection::HashMap`, `IndexMap` is built on top of `hashbrown`, but because
# we're already using `IndexMap` in a lot of crates I do not want to pull in `hashbrown`
# separately as it would be another version to maintain. This way we only have one version.
indexmap.workspace = true
fxhash = "0.2.1"
fixedbitset.workspace = true

[build-dependencies]
rustc_version = "0.4.0"

[dev-dependencies]
petgraph = { workspace = true, default-features = true, features = ['proptest', 'stable-graph'] }
# petgraph is only available in integration tests, while we use petgraph-graph in unit tests
petgraph-graph = { workspace = true, features = ['stable'] }
petgraph-proptest = { workspace = true }
paste = "1.0.12"
proptest = "1.1.0"
approx = "0.5.1"
criterion = "0.5.1"
rand = "0.8.5"
petgraph-test-utils.workspace = true
itertools = "0.10.5"

[features]
default = ["std"]
std = ["petgraph-core/std"]

remove-me-only-intended-for-move-graph = ["dep:petgraph-graph"]
remove-me-only-intended-for-move-adjacency-matrix = ["dep:petgraph-adjacency-matrix"]

[[bench]]
name = "shortest_paths"
harness = false

[[bench]]
name = "matching"
harness = false

[[bench]]
name = "isomorphism"
harness = false

[[bench]]
name = "components"
harness = false

[[bench]]
name = "cycles"
harness = false

[[bench]]
name = "tree"
harness = false
